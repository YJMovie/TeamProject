<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="movie">
	<select id="movieList" resultType="movie.dto.MovieDTO">
		select * from (
		    select rownum rn, A.* from (
		        select * from movie_info order by moviecode
		    )A
		) where rn between #{start} and #{end}
	</select>
	<select id="movieRandom" resultType="movie.dto.MovieDTO">
		select * from (
		    select rownum rn, A.* from (
		        select * from movie_info order by dbms_random.random
		    ) A
		) where rn between #{start} and #{end}
	</select>
	<select id="movieInfo" resultType="movie.dto.MovieDTO" parameterType="String">
		select * from movie_info where moviecode = #{moviecode}
	</select>
	
	<select id="movieTitle" resultType="movie.dto.MovieDTO" parameterType="String">
      select * from movie_info where title = #{title}
   </select>
	
	<select id="movieListScore" resultType="movie.dto.MovieDTO">
		select * from (
			select rownum rn, A.* from (
			    select * from movie_info order by score desc
			) A
		) where rn between #{start} and #{end}
	</select>
	
	<select id="movieListGenre" resultType="movie.dto.MovieDTO" parameterType="String">
		select * from movie_info where moviecode in(
		select mvcode from movie_code where grcode = #{grcode} )

	</select>

		<select id="movieListUserGenre" resultType="movie.dto.MovieDTO" parameterType="String">
		select * from movie_info where moviecode in(
		select mem_mvcode from member_code where mem_userid=#{userid})


	</select>
	
	
	<select id="movieSearch" resultType="movie.dto.MovieDTO">
		select * from (
		  select rownum rn, A.* from (
		    select * from movie_info where 
		      title like #{keyword} or
		      lines like #{keyword}
		  )A
		)where rn between #{start} and #{end}
	</select>
	<select id="reviewList" resultType="movie.dto.ReviewDTO" parameterType="String">
		select * from review_info where r_mvcode = #{moviecode}
	</select>
	<insert id="reviewInsert">
		insert into review_info values (
		    (select nvl(max(r_num)+1,1)from review_info),
		    sysdate, #{r_score}, #{r_comment},#{r_mvcode},#{writer}
		)
	</insert>
	<insert id="movieInsert">
		insert into movie_info values (
		    #{moviecode},#{title},0,to_date(#{open},'yyyy-mm-dd'),#{lines},#{postfname}
		)
	</insert>
	<insert id="moviecodeInsert">
		<choose>
			<when test="grcode == null">
				insert into movie_code (mvcode,pscode) values (
				  #{mvcode},#{pscode}
				)
			</when>
			<when test="pscode == null">
				insert into movie_code (mvcode,grcode) values (
				  #{mvcode},#{grcode}
				)
			</when>
			<when test="grcode != null and pscode != null">
				insert into movie_code values (
				  #{mvcode},#{grcode},#{pscode}
				)
			</when>
		</choose>
	</insert>
	<select id="moviecodeMax" parameterType="String" resultType="String">
		select max(moviecode) from movie_info
	</select>
	<select id="moviecodeGrcode" parameterType="String" resultType="movie.dto.MovieCodeDTO">
		select distinct grcode from movie_code 
			where mvcode = #{mvcode} and
				grcode is not null
			order by grcode
	</select>
	<select id="moviecodePscode" parameterType="String" resultType="movie.dto.MovieCodeDTO">
		select DISTINCT pscode from movie_code 
			where mvcode = #{mvcode} and 
				pscode is not null
			order by pscode
	</select>
	<select id="movieGenre" resultType="String">
		select genrename from genre where genrecode = #{grcode}
	</select>
	<select id="moviePerson" resultType="String">
		select personname from person where personcode = #{pscode}
	</select>
	<select id="movieCount" resultType="int">
		select count(*) from movie_info
	</select>
	<delete id="movieDelete" parameterType="String">
		delete from movie_info where moviecode = #{moviecode}
	</delete>
</mapper>